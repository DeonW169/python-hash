Metadata-Version: 2.4
Name: json-redactor
Version: 0.1.0
Summary: Stream-safe JSON redaction/hasher CLI that preserves structure and key order
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: ijson>=3.2.3

# JSON Redactor

A small command‑line tool that **redacts** or **hashes** sensitive values in an arbitrarily nested JSON document while preserving the document’s structure and key order. Designed to be **stream‑safe** for very large files (500MB+), using an incremental parser.

## Features

- CLI entry point: `json-redactor` (or `python -m json_redactor`)
- Input: file path or `stdin`
- Sensitive keys: via `--keys email,password,ssn` **and/or** `--key-file`
- Case‑insensitive key matching
- Redaction modes (mutually exclusive):
  - `--mask` (default) → replace with `"***REDACTED***"`
  - `--hash` → replace with deterministic **SHA‑256 hex** of the original value
- Preserves structure and original key order
- Streaming‑safe using `ijson` events (does not load the whole file)
- Exit codes: `0` on success, non‑zero on errors

**Stretch options**
- `--keys-regex` (comma‑separated) to match keys by regex (case‑insensitive)
- `--pretty` optional pretty printed output (otherwise compact)

## Install

```bash
pip install -U pip
pip install -e .
# or build a wheel: pip wheel .
```

> Requires Python 3.8+.

## Usage

```bash
# read from file, hash emails and ssn
json-redactor --keys email,ssn --hash people.json > out.json

# read from stdin, mask passwords by default
cat dump.json | json-redactor --keys password > masked.json

# keys from file (one per line), combine with inline list, pretty print
json-redactor --key-file keys.txt --keys ssn --pretty big.json > out.json

# regex keys
json-redactor --keys-regex "(?i)^credit.*|card$" data.json > out.json
```

## Notes on hashing

- For **scalars**, we hash their canonical JSON representation (e.g., `"true"`, `null`, numbers as written).
- For **objects/arrays** under a sensitive key, we hash a **canonical JSON** form reconstructed from the parse events (whitespace‑free, stable ordering of keys as read from the input).  
  This keeps hashing deterministic without holding the whole subtree in memory.

## Development

```bash
# run unit smoke test on example
python -m json_redactor --keys email,ssn --hash examples/people.json
```

## Examples

`examples/people.json`:

```json
[
  { "name": "Anna", "email": "anna@example.com", "ssn": "123-45-6789" },
  { "name": "Ben",  "email": "ben@example.com",  "ssn": "987-65-4321" }
]
```

Command:

```bash
cat examples/people.json | json-redactor --keys email,ssn --hash --pretty
```

Output (truncated hashes):

```json
[
  {
    "name": "Anna",
    "email": "06f14e0a6a3376d910b8e3c4c3c2b5e3f8bd3a66af7e6a9f5c4e3b2a1f0d9c8e",
    "ssn":   "5bf64d14db16bb7c8cb87cc6a4d1097f0a8c4123f83a9c4a0b7a3a7a1a3f5f3c"
  },
  {
    "name": "Ben",
    "email": "7b9504a34aad0b772f2a7f5b91c1342a2c35b1a5d0a1c5b9a9b4c6d7e8f9a0b1",
    "ssn":   "e324b3399a4281cfa5214b1cfe45a0a6af4a0a2b6d5e7f8a9b0c1d2e3f405162"
  }
]
```
